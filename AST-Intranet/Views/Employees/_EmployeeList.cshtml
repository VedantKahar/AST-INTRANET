@{
    ViewBag.Title = "Employee List";
    var employees = Model; // Assuming Model contains the list of employee data passed from the controller
    var departmentName = ViewBag.DepartmentName; // Department name passed from controller
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    Layout = null;
}

<h2>Employees in @departmentName Department</h2>

<div class="employee-list">
    @if (employees != null && employees.Count > 0)
    {
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>EmpCode</th>
                    <th>EmpName</th>
                    <th>Designation</th>
                    <th>Email</th>
                    <th>Phone No</th>
                    <th>Location</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var employee in employees)
                {
                    <tr>
                        <td>@employee["EMP_CODE"]</td>
                        <td>@employee["EMP_NAME"]</td>
                        <td>@employee["DESIGNATION"]</td>
                        <td>@employee["EMAIL"]</td>
                        <td>@employee["PHONE_NO"]</td>
                        <td>@employee["LOCATION"]</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No employees found in this department.</p>
    }
</div>

<!-- Pagination Controls -->
@if (totalPages > 1){
    <div class="pagination">
        <span>Showing @((currentPage - 1) * 15 + 1) to @(currentPage * 15) of @((totalPages * 15) - (15 - employees.Count)) entries</span>

        <ul class="pagination-list">
            @if (currentPage > 1)
            {
                <li><a href="@Url.Action("GetEmployeesByDepartment", "Employees", new { departmentName = departmentName, page = currentPage - 1 })">&laquo; Previous</a></li>
            }

            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="@(i == currentPage ? "active" : "")">
                    <a href="@Url.Action("GetEmployeesByDepartment", "Employees", new { departmentName = departmentName, page = i })">@i</a>
                </li>
            }

            @if (currentPage < totalPages)
            {
                <li><a href="@Url.Action("GetEmployeesByDepartment", "Employees", new { departmentName = departmentName, page = currentPage + 1 })">Next &raquo;</a></li>
            }
        </ul>
    </div>
}

<!-- Add custom styles for pagination -->
<style>

    .table {
        width: 100%;
        border-collapse: collapse;
    }

        .table th, .table td {
            padding: 10px;
            text-align: left;
            border: 1px solid #ddd; /* Light gray border for each cell */
        }

        .table th {
            background-color: #f2f2f2; /* Light background color for headers */
            font-weight: bold;
        }

        .table tr:nth-child(even) {
            background-color: #f9f9f9; /* Alternate row background color for better readability */
        }

    .table-bordered {
        border: 2px solid #ddd; /* Outer border for the table */
    }


    .pagination-list {
        list-style: none;
        padding: 0;
        display: inline-flex;
        gap: 5px;
        margin-left:100px;
    }

        .pagination-list li {
            display: inline;
        }

            .pagination-list li a {
                text-decoration: none;
                padding: 5px 10px;
                border: 1px solid #ddd;
                border-radius: 5px;
                background-color: #f2f2f2;
                color: #333;
            }

            .pagination-list li.active a {
                background-color: #007bff;
                color: white;
            }

            .pagination-list li a:hover {
                background-color: #ddd;
            }

    .pagination {
        margin-top: 20px;
        text-align: center;
    }
</style>
